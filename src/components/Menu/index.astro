---
interface FilteredData extends HeadingsType {
  url: string
  chapter: string
}

interface HeadingsType {
  depth: number
  slug: string
  text: string
}

interface GlobType {
  url: string
  getHeadings: () => HeadingsType[]
}

function filterData(data: GlobType[]): FilteredData[] {
  const retData = []

  data.forEach((item) => {
    const url = item.url
    item.getHeadings().forEach((heading) => {
      retData.push({
        ...heading,
        url,
        chapter: url.split('/')[1].split('chapter')[1],
      })
    })
  })
  return retData
}

let data = await Astro.glob('../../pages/chapter*/*.md')
const menuList = filterData(data)
---

<div class="menu-container">
  <ul class="pt-5 pl-4">
    {
      menuList.map((items) => (
        <li class={'level-' + items.depth}>
          <a class="hover:text-blue-600" href={items.url + '#' + items.slug}>
            {items.text}
          </a>
        </li>
      ))
    }
  </ul>
</div>
<style>
  .menu-container {
    min-width: 210px;
  }
  .level-1 {
    @apply py-1 mt-1 px-2;
  }

  .level-2 {
    @apply pl-5 text-sm;
  }
</style>
